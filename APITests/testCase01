package qtriptest.APITests;

import io.restassured.http.ContentType;
import io.restassured.path.json.JsonPath;
import io.restassured.response.ResponseBody;
import io.restassured.response.ValidatableResponse;
import org.asynchttpclient.Request;
import org.json.JSONObject;
import org.testng.Assert;
import org.testng.annotations.*;
import org.testng.asserts.SoftAssert;
import io.restassured.http.Method;
import io.restassured.response.Response;
import io.restassured.specification.RequestSpecification;
import io.restassured.RestAssured;
import java.util.UUID;
import com.fasterxml.jackson.annotation.ObjectIdGenerators.UUIDGenerator;
import static org.hamcrest.Matchers.*;
// provides matches to make this validation easier/

public class testCase_API_01 {
    // RequestSpecification--> interface
    RequestSpecification http;
    // class variable
    // // captured from registration and login --> and login registartion is required
    String token;
    String userID;

    @BeforeClass
    public void init() {
        http = RestAssured.given().log().all();
        http.baseUri("https://content-qtripdynamic-qa-backend.azurewebsites.net");
        http.basePath("/api/v1/products");
    }

    @Test
    public void testCaseRegisterLogin() {
        RestAssured.baseURI = "https://content-qtripdynamic-qa-backend.azurewebsites.net";
        RestAssured.basePath = "/api/v1/register";

        // JSONObject--> unordered data structure
        // new class
        JSONObject obj = new JSONObject();
        String email = "sheetal" + UUID.randomUUID() + "@gmail.com";
        String password = UUID.randomUUID().toString();
        String confirmpassword = password;

        obj.put("email", email);
        obj.put("password", password);
        obj.put("confirmpassword", confirmpassword);

        Response resp = RestAssured.given().contentType("application/json").body(obj.toString())
                .when().post();
        Assert.assertEquals(resp.getStatusCode(), 201);

        // login
        RestAssured.basePath = "/api/v1/login";
        obj.remove("confirmpassword");

        resp = RestAssured.given().contentType("application/json").body(obj.toString()).log().all()
                .when().post();
        Assert.assertEquals(resp.getStatusCode(), 201);

        JsonPath jp = new JsonPath(resp.body().asString());
        token = jp.getString("data.token");
        userID = jp.getString("data.id");

        Assert.assertTrue(jp.getBoolean("success"));
        Assert.assertNotNull(jp.getString("data.token"));
        Assert.assertNotNull(jp.getString("data.id"));
        
    }
}
